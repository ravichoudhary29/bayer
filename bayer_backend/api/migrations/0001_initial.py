# Generated by Django 5.1.2 on 2024-10-23 09:46

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(choices=[('GP', 'General Practitioner'), ('CD', 'Cardiologist'), ('ON', 'Oncologist'), ('NE', 'Neurologist'), ('DE', 'Dermatologist'), ('OT', 'Orthopedic')], max_length=2)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('room_number', models.CharField(max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveIntegerField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('address', models.TextField()),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('height', models.DecimalField(decimal_places=1, help_text='Height in centimeters', max_digits=4)),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in kilograms', max_digits=5)),
                ('medical_conditions', models.TextField(blank=True, help_text='List any known medical conditions')),
                ('allergies', models.TextField(blank=True, help_text='List any known allergies')),
                ('medications', models.TextField(blank=True, help_text='List any current medications')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('date', models.DateField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.doctor')),
            ],
            options={
                'unique_together': {('doctor', 'start_time', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('S', 'Scheduled'), ('C', 'Completed'), ('X', 'Cancelled')], default='S', max_length=1)),
                ('reason_for_visit', models.TextField()),
                ('additional_details', models.TextField(blank=True, null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='api.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='api.patient')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='api.slot')),
            ],
            options={
                'ordering': ['-appointment_date'],
            },
        ),
    ]
